version: "3.8"

services:
  # Main Memento API server
  memento-api:
    build: .
    ports:
      - "3000:3000"
      - "3001:3001" # WebSocket port
    environment:
      - NODE_ENV=development
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=memento123
      - DATABASE_URL=postgresql://memento:memento@postgres:5432/memento
      - MCP_PORT=3002
    volumes:
      - .:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - neo4j
      - postgres
    networks:
      - memento-network
    restart: unless-stopped

  # Graph & Vector Database (Neo4j)
  neo4j:
    image: neo4j:5-enterprise
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/memento123
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_memory_pagecache_size=2G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_heap_initial__size=1G
    networks:
      - memento-network
    restart: unless-stopped

  # Relational Database (PostgreSQL)
  postgres:
    image: postgres:15-alpine
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=memento
      - POSTGRES_USER=memento
      - POSTGRES_PASSWORD=memento
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - memento-network
    restart: unless-stopped

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    ports:
      - "6378:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    networks:
      - memento-network
    restart: unless-stopped

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  memento-network:
    driver: bridge
